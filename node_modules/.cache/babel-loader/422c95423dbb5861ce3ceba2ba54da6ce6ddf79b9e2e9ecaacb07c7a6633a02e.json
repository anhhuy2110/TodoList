{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bahuy\\\\OneDrive\\\\Desktop\\\\todoList\\\\my-app\\\\src\\\\components\\\\TodoListItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoListItem = ({\n  todo,\n  toggleComplete1,\n  deleteTodo,\n  editTodo\n}) => {\n  _s();\n  const [isEditOn, setIsEditOn] = useState(false);\n  const [inputText, setInputText] = useState(todo.text);\n  const onDeleteTodo = () => {\n    deleteTodo(todo);\n  };\n  const handleEdit = () => {\n    setIsEditOn(true);\n  };\n  const onSaveEdit = () => {\n    editTodo({\n      ...todo,\n      text: inputText\n    });\n    setIsEditOn(false);\n  };\n  const onTodoUpdate = e => {\n    let text = e.target.value;\n    setInputText(text);\n    editTodo(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: todo.complete ? 'todo-row completed' : 'todo-row',\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => toggleComplete1(todo),\n        checked: todo.complete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), isEditOn ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-input\",\n        type: \"text\",\n        value: inputText,\n        onChange: e => onTodoUpdate(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this) : todo.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoListItem, \"vVPpZARnkFijMtnIcwZP5RGHsXk=\");\n_c = TodoListItem;\nvar _c;\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoListItem","todo","toggleComplete1","deleteTodo","editTodo","_s","isEditOn","setIsEditOn","inputText","setInputText","text","onDeleteTodo","handleEdit","onSaveEdit","onTodoUpdate","e","target","value","className","complete","children","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bahuy/OneDrive/Desktop/todoList/my-app/src/components/TodoListItem.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface TodoListItemProps {\r\n  todo: Todo;\r\n  toggleComplete1: ToggleComplete;\r\n  deleteTodo: RemoveTodo;\r\n  editTodo: EditTodo;\r\n}\r\n\r\nexport const TodoListItem: React.FC<TodoListItemProps> = ({\r\n  todo,\r\n  toggleComplete1,\r\n  deleteTodo,\r\n  editTodo,\r\n}) => {\r\n  const [isEditOn, setIsEditOn] = useState<boolean>(false);\r\n  const [inputText, setInputText] = useState<string>(todo.text);\r\n\r\n  const onDeleteTodo = () => {\r\n    deleteTodo(todo);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditOn(true);\r\n  };\r\n\r\n  const onSaveEdit = () => {\r\n    editTodo({ ...todo, text: inputText });\r\n    setIsEditOn(false);\r\n  };\r\n\r\n  const onTodoUpdate = (e: any) => {\r\n    let text = e.target.value;\r\n    setInputText(text);\r\n    editTodo(text);\r\n  }\r\n  \r\n  return (\r\n    <li className={todo.complete ? 'todo-row completed' : 'todo-row'}>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={() => toggleComplete1(todo)}\r\n          checked={todo.complete}\r\n        />\r\n         {isEditOn ? <input className=\"edit-input\" type=\"text\" value={inputText} onChange={(e) => onTodoUpdate(e)}/> : todo.text}\r\n      </label>\r\n    </li>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASxC,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EACxDC,IAAI;EACJC,eAAe;EACfC,UAAU;EACVC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EACxD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAASI,IAAI,CAACS,IAAI,CAAC;EAE7D,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBR,UAAU,CAACF,IAAI,CAAC;EAClB,CAAC;EAED,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvBL,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACvBT,QAAQ,CAAC;MAAE,GAAGH,IAAI;MAAES,IAAI,EAAEF;IAAU,CAAC,CAAC;IACtCD,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMO,YAAY,GAAIC,CAAM,IAAK;IAC/B,IAAIL,IAAI,GAAGK,CAAC,CAACC,MAAM,CAACC,KAAK;IACzBR,YAAY,CAACC,IAAI,CAAC;IAClBN,QAAQ,CAACM,IAAI,CAAC;EAChB,CAAC;EAED,oBACEX,OAAA;IAAImB,SAAS,EAAEjB,IAAI,CAACkB,QAAQ,GAAG,oBAAoB,GAAG,UAAW;IAAAC,QAAA,eAC/DrB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QACEsB,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAEA,CAAA,KAAMpB,eAAe,CAACD,IAAI,CAAE;QACtCsB,OAAO,EAAEtB,IAAI,CAACkB;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,EACArB,QAAQ,gBAAGP,OAAA;QAAOmB,SAAS,EAAC,YAAY;QAACG,IAAI,EAAC,MAAM;QAACJ,KAAK,EAAET,SAAU;QAACc,QAAQ,EAAGP,CAAC,IAAKD,YAAY,CAACC,CAAC;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,GAAG1B,IAAI,CAACS,IAAI;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAET,CAAC;AAACtB,EAAA,CAxCWL,YAAyC;AAAA4B,EAAA,GAAzC5B,YAAyC;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}