{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bahuy\\\\OneDrive\\\\Desktop\\\\todoList\\\\my-app\\\\src\\\\components\\\\TodoListItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoListItem = ({\n  todo,\n  toggleComplete\n}) => {\n  _s();\n  const [isEditOn, setIsEditOn] = useState(false);\n  const [inputText, setInputText] = useState(todo.text);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: todo.complete ? 'todo-row completed' : 'todo-row',\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => {\n          toggleComplete(todo);\n        },\n        checked: todo.complete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), todo.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoListItem, \"vVPpZARnkFijMtnIcwZP5RGHsXk=\");\n_c = TodoListItem;\nvar _c;\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoListItem","todo","toggleComplete","_s","isEditOn","setIsEditOn","inputText","setInputText","text","className","complete","children","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bahuy/OneDrive/Desktop/todoList/my-app/src/components/TodoListItem.tsx"],"sourcesContent":["\r\nimport React, { useState } from 'react'\r\n\r\n\r\ninterface  TodoListItemProps{\r\n    todo: Todo;\r\n    toggleComplete: ToggleComplete;\r\n}\r\n\r\nexport const TodoListItem: React.FC<TodoListItemProps> = ({todo,toggleComplete}) => {\r\nconst [isEditOn, setIsEditOn] = useState<boolean>(false);\r\n  const [inputText, setInputText] = useState<string>(todo.text);\r\n\r\n  return (\r\n    <li className={todo.complete ? 'todo-row completed' : 'todo-row'}>\r\n    <label>\r\n    <input\r\n        type=\"checkbox\"\r\n        onChange={() => {toggleComplete(todo)}}\r\n        checked={todo.complete}\r\n    />\r\n    {todo.text}\r\n    </label>\r\n    </li>\r\n  )\r\n}\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQvC,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAACC,IAAI;EAACC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAASI,IAAI,CAACO,IAAI,CAAC;EAE7D,oBACET,OAAA;IAAIU,SAAS,EAAER,IAAI,CAACS,QAAQ,GAAG,oBAAoB,GAAG,UAAW;IAAAC,QAAA,eACjEZ,OAAA;MAAAY,QAAA,gBACAZ,OAAA;QACIa,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAEA,CAAA,KAAM;UAACX,cAAc,CAACD,IAAI,CAAC;QAAA,CAAE;QACvCa,OAAO,EAAEb,IAAI,CAACS;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,EACDjB,IAAI,CAACO,IAAI;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET,CAAC;AAAAf,EAAA,CAhBYH,YAAyC;AAAAmB,EAAA,GAAzCnB,YAAyC;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}