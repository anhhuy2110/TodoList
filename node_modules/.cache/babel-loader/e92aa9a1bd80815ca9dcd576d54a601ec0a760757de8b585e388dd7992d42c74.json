{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bahuy\\\\OneDrive\\\\Desktop\\\\todoList\\\\my-app\\\\src\\\\components\\\\TodoListItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoListItem = TodoListItemProps => {\n  _s();\n  const {\n    todo,\n    toggleComplete1,\n    deleteTodo,\n    editTodo\n  } = TodoListItemProps;\n  const [isEditOn, setIsEditOn] = useState(false);\n  const [inputText, setInputText] = useState(todo.text);\n  const onDeleleTodo = () => {\n    deleteTodo(todo);\n  };\n  const handleDelete = () => {\n    setIsEditOn(true);\n  };\n  const onTodoUpdate = e => {\n    let text = e.target.value;\n    setInputText(text);\n    editTodo(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: todo.complete ? \"todo-row completed\" : \"todo-row\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => toggleComplete1(todo),\n        checked: todo.complete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), todo.text, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDeleleTodo,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), isEditOn ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-input\",\n        type: \"text\",\n        value: inputText,\n        onChange: e => onTodoUpdate(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this) : todo.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoListItem, \"vVPpZARnkFijMtnIcwZP5RGHsXk=\");\n_c = TodoListItem;\nvar _c;\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoListItem","TodoListItemProps","_s","todo","toggleComplete1","deleteTodo","editTodo","isEditOn","setIsEditOn","inputText","setInputText","text","onDeleleTodo","handleDelete","onTodoUpdate","e","target","value","className","complete","children","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bahuy/OneDrive/Desktop/todoList/my-app/src/components/TodoListItem.tsx"],"sourcesContent":["\r\nimport React, { useState } from 'react'\r\n\r\n\r\ninterface  TodoListItemProps{\r\n    todo: Todo;\r\n    toggleComplete1: ToggleComplete;\r\n    deleteTodo: RemoveTodo;\r\n    editTodo: EditTodo;\r\n}\r\n\r\nexport const TodoListItem: React.FC<TodoListItemProps> = (TodoListItemProps) => {\r\n    const {todo,toggleComplete1,deleteTodo,editTodo} = TodoListItemProps;\r\n    const [isEditOn, setIsEditOn] = useState<boolean>(false);\r\n    const [inputText, setInputText] = useState<string>(todo.text);\r\n\r\n    const onDeleleTodo = () => {\r\n        deleteTodo(todo);\r\n    }\r\n\r\n    const handleDelete = () =>{\r\n        setIsEditOn(true)\r\n    }\r\n\r\n    const onTodoUpdate = (e: any) => {\r\n        let text = e.target.value;\r\n        setInputText(text);\r\n        editTodo(text);\r\n      }\r\n\r\n  return (\r\n    <li className={todo.complete ? \"todo-row completed\" : \"todo-row\"}>\r\n        <label>\r\n            <input\r\n                type=\"checkbox\"\r\n                onChange={() => toggleComplete1(todo)}\r\n                checked={todo.complete}\r\n            />\r\n            {todo.text}\r\n            <button onClick={onDeleleTodo}>Delete</button>\r\n            <button onClick={handleDelete}>Edit</button>\r\n            {isEditOn ? <input className=\"edit-input\" type=\"text\" value={inputText} onChange={(e) => onTodoUpdate(e)}/> : todo.text}\r\n        </label>\r\n    </li>\r\n  )\r\n}\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUvC,OAAO,MAAMC,YAAyC,GAAIC,iBAAiB,IAAK;EAAAC,EAAA;EAC5E,MAAM;IAACC,IAAI;IAACC,eAAe;IAACC,UAAU;IAACC;EAAQ,CAAC,GAAGL,iBAAiB;EACpE,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EACxD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAASM,IAAI,CAACQ,IAAI,CAAC;EAE7D,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBP,UAAU,CAACF,IAAI,CAAC;EACpB,CAAC;EAED,MAAMU,YAAY,GAAGA,CAAA,KAAK;IACtBL,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMM,YAAY,GAAIC,CAAM,IAAK;IAC7B,IAAIJ,IAAI,GAAGI,CAAC,CAACC,MAAM,CAACC,KAAK;IACzBP,YAAY,CAACC,IAAI,CAAC;IAClBL,QAAQ,CAACK,IAAI,CAAC;EAChB,CAAC;EAEL,oBACEZ,OAAA;IAAImB,SAAS,EAAEf,IAAI,CAACgB,QAAQ,GAAG,oBAAoB,GAAG,UAAW;IAAAC,QAAA,eAC7DrB,OAAA;MAAAqB,QAAA,gBACIrB,OAAA;QACIsB,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAEA,CAAA,KAAMlB,eAAe,CAACD,IAAI,CAAE;QACtCoB,OAAO,EAAEpB,IAAI,CAACgB;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,EACDxB,IAAI,CAACQ,IAAI,eACVZ,OAAA;QAAQ6B,OAAO,EAAEhB,YAAa;QAAAQ,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9C5B,OAAA;QAAQ6B,OAAO,EAAEf,YAAa;QAAAO,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC3CpB,QAAQ,gBAAGR,OAAA;QAAOmB,SAAS,EAAC,YAAY;QAACG,IAAI,EAAC,MAAM;QAACJ,KAAK,EAAER,SAAU;QAACa,QAAQ,EAAGP,CAAC,IAAKD,YAAY,CAACC,CAAC;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,GAAGxB,IAAI,CAACQ,IAAI;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAET,CAAC;AAAAzB,EAAA,CAlCYF,YAAyC;AAAA6B,EAAA,GAAzC7B,YAAyC;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}